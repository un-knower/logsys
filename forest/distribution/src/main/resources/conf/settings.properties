prop.kafka.bootstrap.servers=bigdata-computing-01-001:9092,bigdata-computing-01-003:9092,bigdata-computing-01-004:9092
prop.kafka-consumer.group.id=forest
prop.kafka-producer.compression.type=snappy
prop.kafka-producer.max.request.size=1572864

prop.KafkaMsgSource.batchSize=10000
prop.KafkaMsgSource.callableSize=1000
prop.KafkaMsgSource.recoverSourceOffsetFromSink=1
prop.KafkaMsgSource.topicRegex=^log-raw-boikgpokn78sb95kjhfrendoj8ilnoi7$
prop.KafkaMsgSource.topicScanIntervalSec=0
prop.KafkaMsgSource.defaultOffset=
prop.KafkaMsgSource.logPerMsgCount=200

prop.HdfsMsgSink.commitOpCount=100000
prop.HdfsMsgSink.commitSizeByte=10485760
prop.HdfsMsgSink.commitTimeMillSec=300000
prop.HdfsMsgSink.tmpRootDir=/data_warehouse/ods_origin.db/tmp_log_origin
prop.HdfsMsgSink.commitRootDir=/data_warehouse/ods_origin.db/log_origin
prop.HdfsMsgSink.errRootDir=/data_warehouse/ods_origin.db/err_log_origin

prop.MsgBatchManager.msgSink=HdfsMsgSink
#prop.MsgBatchManager.msgSink=KafkaMsgSink

prop.MsgBatchManager.processorChain=GenericProcessorChain
#prop.MsgBatchManager.processorChain=LogOriginProcessorChain

