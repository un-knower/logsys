log_format  main  '$msg_id $server_addr $host $remote_addr - $remote_user [$time_local] "$request" '
'$status $body_bytes_sent "$http_referer" '
'"$http_user_agent" "$content_type" "$http_x_forwarded_for" "$request_body"';

log_format msgLog  '{'
            '"msgId":"$msg_id"'
            ',"msgVersion":"1.0"'
            ',"msgSite":"$msg_site"'
            ',"msgSource":"ngx_log"'
            ',"msgFormat":"json"'
            ',"msgBody":{'
            '"host":"$host"'
            ',"method":"$request_method"'
            ',"url":"$request_uri"'
            ',"contentType":"$content_type"'
            ',"realIP":"$msg_remote_ip"'
            ',"receiveTime":$msg_receive_time'
            ',"msgSignFlag":$msg_sign_flag'
            ',"appId":"$msg_app_id"'
            ',"body":$request_body'
            '}'
            '}'
            ;

lua_shared_dict sharedDict 1m;

init_by_lua_file 'conf/online/nginx_init.lua';

upstream local {
  server localhost:81;
  #keepalive 100;
}

upstream remote {
  server localhost:80;
}


############################################################################
#
############################################################################
server {
    listen       80;
    server_name  vrlog.aginomoto.com;
    location / {
        access_log off;
        content_by_lua 'doSubrequest("/local"..ngx.var.request_uri,"/remote"..ngx.var.request_uri)';
    }

    location ~ /local/(.*) {
        internal;
        log_subrequest on;
        proxy_set_header HTTP_Host $host;
        proxy_set_header HTTP_X-Real-IP $remote_addr;
        proxy_set_header HTTP_X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://local/$1$is_args$args;
    }

    location ~ /remote/(.*) {
        internal;
        log_subrequest on;
        proxy_set_header HTTP_Host $host;
        proxy_set_header HTTP_X-Real-IP $remote_addr;
        proxy_set_header HTTP_X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://remote/$1$is_args$args;
    }
}